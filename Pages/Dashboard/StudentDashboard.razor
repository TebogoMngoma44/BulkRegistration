@page "/Dashboard/studentDashboard"

<PageTitle>Learner Dashboard</PageTitle>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<style>

    .dashboard-container {
        min-height: 100vh;
        background-color: #f5f5f5;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .header-nav {
        background-color: white;
        color: #12265e;
        padding: 12px 0;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .brand-circle {
        width: 50px;
        height: 50px;
        background: #294a70;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1.2rem;
        color: white;
        margin-right: 20px;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .brand-circle:hover {
            background: rgba(41, 74, 112, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transform: scale(1.05);
        }

    /* Hamburger Menu */
    .hamburger-menu {
        background: transparent;
        border: none;
        color: #11265e;
        font-size: 1.5rem;
        cursor: pointer;
        padding: 8px;
        border-radius: 4px;
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        transform: rotate(0deg);
    }

        .hamburger-menu:hover {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .hamburger-menu.open {
            transform: rotate(90deg);
        }

    /* Desktop Navigation */
    .nav-button {
        color: #12265e;
        font-weight: bold;
        padding: 8px 12px;
        margin: 0 4px;
        border-radius: 4px;
        border: none;
        background: transparent;
        cursor: pointer;
        flex: 1;
        text-align: center;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        font-size: 0.9rem;
        white-space: nowrap;
        min-width: 0;
        flex-shrink: 1;
        text-transform: none;
    }

        .nav-button.active {
            background-color: #12265e;
            color: white;
            border-radius: 16px;
        }

        .nav-button:hover {
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    /* Mobile Navigation */
    .mobile-nav-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1999;
        backdrop-filter: blur(5px);
    }

    .mobile-nav-menu {
        position: fixed;
        top: 0;
        left: 0;
        width: 280px;
        height: 100vh;
        background: #183153;
        z-index: 2000;
        padding: 20px;
        transform: translateX(-100%);
        transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        box-shadow: 2px 0 20px rgba(0, 0, 0, 0.3);
        display: flex;
        flex-direction: column;
    }

        .mobile-nav-menu.open {
            transform: translateX(0);
        }

    .mobile-nav-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }

    .mobile-nav-content {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .mobile-nav-button {
        color: white;
        font-weight: 500;
        padding: 15px 20px;
        margin: 5px 0;
        border-radius: 8px;
        border: none;
        background: transparent;
        cursor: pointer;
        text-align: left;
        width: 100%;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        font-size: 1rem;
        text-transform: none;
    }

        .mobile-nav-button:hover {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .mobile-nav-button.active {
            background: rgba(61, 78, 106, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

    .mobile-nav-bottom {
        padding-top: 20px;
        border-top: 1px solid rgba(255, 255, 255, 0.2);
        margin-top: auto;
    }

    .mobile-nav-bottom-buttons {
        display: flex;
        gap: 10px;
    }

    .mobile-nav-bottom-button {
        color: white;
        font-weight: 500;
        padding: 12px 16px;
        border-radius: 8px;
        border: none;
        background: rgba(255, 255, 255, 0.1);
        cursor: pointer;
        text-align: center;
        width: 100%;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        font-size: 0.9rem;
        text-transform: none;
        flex: 1;
    }

        .mobile-nav-bottom-button:hover {
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .mobile-nav-bottom-button.logout {
            background: rgb(220, 53, 69);
        }

            .mobile-nav-bottom-button.logout:hover {
                background: rgb(200, 35, 51);
                backdrop-filter: blur(10px);
                border: 1px solid rgba(220, 38, 38, 0.4);
                box-shadow: 0 4px 12px rgba(220, 38, 38, 0.2);
            }

    .close-menu-btn {
        background: transparent;
        border: none;
        color: white;
        font-size: 1.5rem;
        cursor: pointer;
        padding: 5px;
        border-radius: 4px;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .close-menu-btn:hover {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    /* Profile and Notifications */
    .profile-avatar {
        width: 50px;
        height: 50px;
        background: #3d4e6a;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        margin-left: 8px;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .profile-avatar:hover {
            background: rgba(61, 78, 106, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    /* Profile Dropdown */
    .profile-dropdown {
        position: relative;
    }

    .profile-dropdown-menu {
        position: absolute;
        top: 60px;
        right: 0;
        background: #183153;
        border-radius: 8px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
        min-width: 180px;
        z-index: 2001;
        opacity: 0;
        transform: translateY(-10px);
        visibility: hidden;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .profile-dropdown-menu.show {
            opacity: 1;
            transform: translateY(0);
            visibility: visible;
        }

    .profile-dropdown-item {
        padding: 12px 16px;
        cursor: pointer;
        color: white;
        font-weight: 500;
        border: none;
        background: transparent;
        width: 100%;
        text-align: left;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        font-size: 0.9rem;
        border-radius: 0;
    }

        .profile-dropdown-item:first-child {
            border-radius: 8px 8px 0 0;
        }

        .profile-dropdown-item:last-child {
            border-radius: 0 0 8px 8px;
        }

        .profile-dropdown-item:only-child {
            border-radius: 8px;
        }

        .profile-dropdown-item:hover {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .profile-dropdown-item.logout:hover {
            background: rgb(200, 35, 51);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(220, 38, 38, 0.4);
            box-shadow: 0 4px 12px rgba(220, 38, 38, 0.2);
        }

    .notification-badge {
        position: relative;
        margin-right: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        padding: 5px;
        border-radius: 50%;
    }

        .notification-badge:hover {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .notification-bell {
        color: white;
        font-size: 1.5rem;
        position: relative;
    }

    .notification-banner {
        background: linear-gradient(to right, #23426c 80%, rgba(35, 66, 108, 0.7) 100%);
        color: white;
        padding: 20px;
        margin: 20px 20px 40px 20px;
        border-radius: 8px;
    }

    .notification-icon {
        margin-right: 15px;
        font-size: 1.5rem;
    }

    .more-info-btn {
        background: white;
        color: #183153;
        border: 1px solid white;
        padding: 8px 20px;
        border-radius: 20px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        white-space: nowrap;
        text-transform: none;
    }

        .more-info-btn:hover {
            background: rgba(248, 249, 250, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            color: #183153;
        }

    .welcome-section {
        padding: 20px 20px 40px 20px;
        margin-bottom: 20px;
    }

    .welcome-title {
        font-size: 1.8rem;
        color: #183153;
        font-weight: 600;
        margin: 0;
    }

    /* Main Cards */
    .progress-card,
    .dev-express-card {
        background: white;
        border-radius: 8px;
        padding: 30px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
        min-height: 200px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        cursor: pointer;
    }

        .progress-card:hover,
        .dev-express-card:hover {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    .dev-express-card {
        border-radius: 25px;
        align-items: center;
    }

    .progress-title {
        color: #183153;
        font-size: 1.1rem;
        font-weight: 500;
        margin-bottom: 20px;
    }

    .course-title {
        color: #183153;
        font-size: 1.8rem;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .course-level {
        color: #183153;
        font-size: 1.3rem;
        font-weight: 500;
        margin-bottom: 30px;
    }

    .dev-express-title {
        color: #183153;
        font-size: 1.8rem;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .dev-express-subtitle {
        color: #718096;
        font-size: 1.2rem;
        margin-bottom: 25px;
    }
</style>

<div class="dashboard-container">

    <!-- Mobile Navigation Overlay -->
    @if (isMobileMenuOpen)
    {
        <div class="mobile-nav-overlay" @onclick="CloseMobileMenu"></div>
        <div class="mobile-nav-menu @(isMobileMenuOpen ? "open" : "")">
            <div class="mobile-nav-header">
                <div class="brand-circle">SC</div>
                <button class="close-menu-btn" @onclick="CloseMobileMenu">✕</button>
            </div>

            <div class="mobile-nav-content">
                <MudButton Class="mobile-nav-button active" Variant="Variant.Text" OnClick="CloseMobileMenu" Style="text-transform: none;">My Dashboard</MudButton>
                <MudButton Class="mobile-nav-button" Variant="Variant.Text" OnClick="CloseMobileMenu" Style="text-transform: none;">My Qualifications</MudButton>
                <MudButton Class="mobile-nav-button" Variant="Variant.Text" OnClick="CloseMobileMenu" Style="text-transform: none;">My Progress</MudButton>
                <MudButton Class="mobile-nav-button" Variant="Variant.Text" OnClick="CloseMobileMenu" Style="text-transform: none;">My Achievements</MudButton>
                <MudButton Class="mobile-nav-button" Variant="Variant.Text" OnClick="CloseMobileMenu" Style="text-transform: none;">My Messages</MudButton>
                <MudButton Class="mobile-nav-button" Variant="Variant.Text" OnClick="CloseMobileMenu" Style="text-transform: none;">Quick Tips</MudButton>
            </div>

            <!-- Bottom section with Settings and Logout -->
            <div class="mobile-nav-bottom">
                <div class="mobile-nav-bottom-buttons">
                    <MudButton Class="mobile-nav-bottom-button" Variant="Variant.Text" OnClick="@(() => HandleSettings())" Style="text-transform: none;">Settings</MudButton>
                    <MudButton Class="mobile-nav-bottom-button logout" Variant="Variant.Text" OnClick="@(() => HandleLogout())" Style="text-transform: none;">Logout</MudButton>
                </div>
            </div>
        </div>
    }

    <!-- Notification Banner -->
    <div class="notification-banner">
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Style="width: 100%;">
            <MudStack Row="true" AlignItems="AlignItems.Center" Class="notification-content">
                <div class="notification-icon">ℹ️</div>
                <div>
                    <div style="font-size: 1.1rem; font-weight: 600; margin-bottom: 5px;">
                        Please take note that all Stipends are delayed.
                    </div>
                    <div style="font-size: 0.9rem; opacity: 0.9;">
                        Please bare with us.
                    </div>
                </div>
            </MudStack>
            <MudHidden Breakpoint="Breakpoint.SmAndDown">
                <MudButton Class="more-info-btn" Variant="Variant.Text" Style="text-transform: none;">Dismiss</MudButton>
            </MudHidden>
        </MudStack>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudStack AlignItems="AlignItems.Center" Style="margin-top: 15px;">
                <MudButton Class="more-info-btn" Variant="Variant.Text" Style="text-transform: none;">More Info</MudButton>
            </MudStack>
        </MudHidden>
    </div>

    <!-- Welcome Section -->
    <div class="welcome-section">
        <h1 class="welcome-title">Welcome @LearnerName</h1>
    </div>

    <!-- Main Cards -->
    <div style="padding: 0 20px;">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            <MudGrid Spacing="3" Class="mb-6">
                <!-- Progress Card -->
                <MudItem xs="12">
                    <div class="progress-card">
                        <div class="progress-title">Currently in Progress:</div>
                        <div class="course-title">Business Administration Services</div>
                        <div class="course-level">NQF Level 03</div>
                    </div>
                </MudItem>

                <!-- Dev Express Card -->
                <MudItem xs="12">
                    <div class="dev-express-card">
                        <div class="dev-express-title">Dev Express</div>
                        <div class="dev-express-subtitle">Report</div>
                    </div>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </div>
</div>

@code {
    private string LearnerName = "";
    private bool isMobileMenuOpen = false;
    private bool isProfileDropdownOpen = false;

    private string GetInitials(string fullName)
    {
        if (string.IsNullOrWhiteSpace(fullName))
            return "";

        var parts = fullName.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries);

        if (parts.Length == 1)
            return parts[0][0].ToString().ToUpper();

        return $"{parts[0][0]}{parts[1][0]}".ToUpper();
    }

    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
        // Close profile dropdown when mobile menu opens
        if (isMobileMenuOpen)
            isProfileDropdownOpen = false;
    }

    private void CloseMobileMenu()
    {
        isMobileMenuOpen = false;
    }

    private void ToggleProfileDropdown()
    {
        isProfileDropdownOpen = !isProfileDropdownOpen;
        // Close mobile menu when profile dropdown opens
        if (isProfileDropdownOpen)
            isMobileMenuOpen = false;
    }

    private void CloseProfileDropdown()
    {
        isProfileDropdownOpen = false;
    }

    private void HandleViewProfile()
    {
        CloseProfileDropdown();
        // Add your view profile navigation logic here
    }

    private void HandleSettings()
    {
        CloseProfileDropdown();
        CloseMobileMenu();
        // Add your settings navigation logic here
    }

    private void HandleLogout()
    {
        CloseProfileDropdown();
        CloseMobileMenu();
        _ = HandleLogoutAsync(); // Fire and forget the async operation
    }

    private async Task HandleLogoutAsync()
    {
        try
        {
            // Call logout endpoint - matching your auth/login pattern
            var response = await Http.PostAsync("auth/logout", null);

            // Clear any local storage/session data if needed
            // await LocalStorage.RemoveItemAsync("authToken"); // if using localStorage

            // Navigate to login regardless of logout response
            NavigationManager.NavigateTo("/", true);
        }
        catch (Exception ex)
        {
            // Log error but still navigate away for security
            Console.WriteLine($"Logout API call failed: {ex.Message}");

            // Always navigate to login even if logout call fails
            NavigationManager.NavigateTo("/", true);
        }
    }

    public class User
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }
}